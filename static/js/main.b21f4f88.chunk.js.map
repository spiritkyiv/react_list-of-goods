{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","sortByAlphabet","setState","sortByLength","reverse","reset","this","arr","goods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","getReorderedGoods","isClicked","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAU,GAHd,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZF,SAAU,KARhB,EAYEG,aAAe,WACb,EAAKD,SAAS,CACZF,SAAU,KAdhB,EAkBEI,QAAU,WACR,EAAKF,UAAS,SAACJ,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBApBzB,EAwBEM,MAAQ,WACN,EAAKH,SAAS,CACZH,YAAY,EACZC,SAAU,KA3BhB,4CA+BE,WACE,MAAiCM,KAAKR,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZQ,EA3DH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNU,EAAY,YAAOD,GAYzB,OATIR,IAAaL,EAASe,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1Cb,IAAaL,EAASoB,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAIpCjB,EAAaU,EAAaL,UAAYK,EA0C/BQ,CAAkBrB,EAAiBU,KAAKR,OAC9CoB,KAAenB,IAAeC,GAEpC,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBAAkB,CAC3B,WAAYrB,IAAaL,EAASe,UAGtCY,QAAShB,KAAKL,eAPhB,iCAYA,wBACEmB,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,WAAYrB,IAAaL,EAASoB,SAGtCO,QAAShB,KAAKH,aAPhB,4BAYA,wBACEiB,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,YAAatB,IAGjBuB,QAAShB,KAAKF,QAPhB,qBAYCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,MAHhB,sBAWJ,6BACE,6BACGE,EAAIgB,KAAI,SAACC,GAAD,OACP,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA1FtC,GAAyBC,aCrDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b21f4f88.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  // eslint-disable-next-line no-console\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: 1,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: 2,\n    });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: 0,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const arr = getReorderedGoods(goodsFromServer, this.state);\n    const isClicked = !(!isReversed && !sortType);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-info', {\n                'is-light': sortType !== SortType.ALPABET,\n              })\n            }\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              })\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames('button is-warning', {\n                'is-light': !isReversed,\n              })\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isClicked && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {arr.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}